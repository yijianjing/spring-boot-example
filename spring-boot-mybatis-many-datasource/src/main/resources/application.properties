
server.port=8081
# jackson时间格式化(解决时区问题)
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

#数据源 >> 1 >>  配置
#连接地址 &useSSL=false
spring.datasource.test1.url=jdbc:mysql://localhost:3306/db_test1?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#用户名
spring.datasource.test1.username=root
#密码
spring.datasource.test1.password=123456

#驱动
spring.datasource.test1.driver-class-name=com.mysql.cj.jdbc.Driver
#连接池其它设置
#初始化时建立物理连接的个数
spring.datasource.test1.initial-size=5
#最小连接池数量
spring.datasource.test1.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.test1.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.test1.max-wait=60000
#申请连接检测,空闲时间大于检测的间隔时间,执行validationQuery检测
spring.datasource.test1.test-while-idle=true
#检测的间隔时间
spring.datasource.test1.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.test1.min-evictable-idle-time-millis=30000
#用来检测连接是否有效
spring.datasource.test1.validation-query=SELECT 1 FROM DUAL 
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.test1.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.test1.test-on-return=false



#数据源 >> 2 >>  配置
#连接地址
spring.datasource.test2.url=jdbc:mysql://localhost:3306/db_test2?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true
#用户名
spring.datasource.test2.username=root
#密码
spring.datasource.test2.password=123456
#驱动
spring.datasource.test2.driver-class-name=com.mysql.cj.jdbc.Driver
#连接池其它设置
#初始化时建立物理连接的个数
spring.datasource.test2.initial-size=5
#最小连接池数量
spring.datasource.test2.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.test2.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.test2.max-wait=60000
#申请连接检测,空闲时间大于检测的间隔时间,执行validationQuery检测
spring.datasource.test2.test-while-idle=true
#检测的间隔时间
spring.datasource.test2.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.test2.min-evictable-idle-time-millis=30000
#用来检测连接是否有效
spring.datasource.test2.validation-query=SELECT 1 FROM DUAL 
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.test2.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.test2.test-on-return=false


#日志配置
logging.level.root=WARN
logging.level.com.example=debug